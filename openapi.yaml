openapi: 3.1.0
info:
  title: FastAPI
  version: 0.1.0
paths:
  /admin/locations/revert-update/{update_id}:
    put:
      tags:
      - admin
      summary: Revert Location Update
      operationId: revert_location_update
      parameters:
      - required: true
        schema:
          type: string
          title: Update Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: update_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /auth/token:
    post:
      tags:
      - auth
      summary: Login
      operationId: login
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /locations/bbox:
    get:
      tags:
      - locations
      summary: Get Locations By Bbox
      operationId: get_locations_by_bbox
      parameters:
      - required: true
        schema:
          type: number
          maximum: 180.0
          minimum: -180.0
          title: West
        name: west
        in: query
      - required: true
        schema:
          type: number
          maximum: 90.0
          minimum: -90.0
          title: South
        name: south
        in: query
      - required: true
        schema:
          type: number
          maximum: 180.0
          minimum: -180.0
          title: East
        name: east
        in: query
      - required: true
        schema:
          type: number
          maximum: 90.0
          minimum: -90.0
          title: North
        name: north
        in: query
      - required: false
        schema:
          items:
            type: string
          type: array
          title: Activities
        name: activities
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LocationShortApi'
                type: array
                title: Response Get Locations By Bbox Locations Bbox Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /locations/around:
    get:
      tags:
      - locations
      summary: Get Locations Around
      operationId: get_locations_around
      parameters:
      - required: true
        schema:
          type: number
          maximum: 180.0
          minimum: -180.0
          title: Long
        name: long
        in: query
      - required: true
        schema:
          type: number
          maximum: 90.0
          minimum: -90.0
          title: Lat
        name: lat
        in: query
      - required: false
        schema:
          type: number
          title: Radius
        name: radius
        in: query
      - required: false
        schema:
          items:
            type: string
          type: array
          title: Activities
        name: activities
        in: query
      - description: Closest n locations to be returned
        required: false
        schema:
          type: integer
          title: Limit
          description: Closest n locations to be returned
          default: 20
        name: limit
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LocationDetailedApi'
                type: array
                title: Response Get Locations Around Locations Around Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /locations/{location_id}:
    get:
      tags:
      - locations
      summary: Get Location
      operationId: get_location
      parameters:
      - required: true
        schema:
          type: string
          title: Location Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: location_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationDetailedApi'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - locations
      summary: Delete Location
      operationId: delete_location
      parameters:
      - required: true
        schema:
          type: integer
          title: Location Id
        name: location_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /locations/bulk:
    get:
      tags:
      - locations
      summary: Get Location Bulk
      operationId: get_location_bulk
      parameters:
      - required: true
        schema:
          items:
            type: string
            examples:
            - 5eb7cf5a86d9755df3a6c593
            - 5eb7cfb05e32e07750a1756a
          type: array
          title: Id
        name: id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /locations/:
    put:
      tags:
      - locations
      summary: Update Location
      operationId: update_location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationHistoryIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
    post:
      tags:
      - locations
      summary: Create New Location
      operationId: create_new_location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationNew'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /locations/{location_id}/update-history:
    get:
      tags:
      - locations
      summary: Get Location History
      operationId: get_location_history
      parameters:
      - required: true
        schema:
          type: string
          title: Location Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: location_id
        in: path
      - required: false
        schema:
          type: integer
          title: Offset
          default: 0
        name: offset
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /locations/report-update/{update_id}:
    post:
      tags:
      - locations
      summary: Report Location Update
      operationId: report_location_update
      parameters:
      - required: true
        schema:
          type: string
          title: Update Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: update_id
        in: path
      - required: true
        schema:
          type: string
          title: Reason
        name: reason
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /locations/{location_id}/reviews/:
    get:
      tags:
      - locations
      - reviews
      summary: Get Reviews
      description: Get `n` reviews starting from the `offset`th entry.
      operationId: get_reviews
      parameters:
      - required: true
        schema:
          type: string
          title: Location Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: location_id
        in: path
      - required: false
        schema:
          type: integer
          title: Offset
          default: 0
        name: offset
        in: query
      - required: false
        schema:
          type: integer
          title: N
          default: 10
        name: n
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewsPage'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - locations
      - reviews
      summary: Create Review
      operationId: create_review
      parameters:
      - required: true
        schema:
          type: string
          title: Location Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: location_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewBase'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /locations/{location_id}/reviews/{review_id}:
    put:
      tags:
      - locations
      - reviews
      summary: Update Review
      operationId: update_review
      parameters:
      - required: true
        schema:
          type: string
          title: Location Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: location_id
        in: path
      - required: true
        schema:
          type: string
          title: Review Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: review_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewBase'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
    delete:
      tags:
      - locations
      - reviews
      summary: Remove Review
      operationId: remove_review
      parameters:
      - required: true
        schema:
          type: string
          title: Location Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: location_id
        in: path
      - required: true
        schema:
          type: string
          title: Review Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: review_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /locations/{location_id}/reviews/{review_id}/report:
    put:
      tags:
      - locations
      - reviews
      summary: Report Review
      operationId: report_review
      parameters:
      - required: true
        schema:
          type: string
          title: Location Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: location_id
        in: path
      - required: true
        schema:
          type: string
          title: Review Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: review_id
        in: path
      - required: true
        schema:
          type: string
          title: Reason
        name: reason
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /locations/{location_id}/reviews/confirmation:
    put:
      tags:
      - locations
      - reviews
      summary: Set Confirmation
      operationId: set_confirmation
      parameters:
      - required: true
        schema:
          type: string
          title: Location Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: location_id
        in: path
      - required: false
        schema:
          type: boolean
          title: Confirm
          default: true
        name: confirm
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /locations/{location_id}/photos/:
    post:
      tags:
      - locations
      - photos
      summary: Add Photo
      operationId: add_photo
      parameters:
      - required: true
        schema:
          type: string
          title: Location Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: location_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhotoUrl'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /locations/{location_id}/photos/{photo_id}:
    delete:
      tags:
      - locations
      - photos
      summary: Remove Photo
      operationId: remove_photo
      parameters:
      - required: true
        schema:
          type: string
          title: Location Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: location_id
        in: path
      - required: true
        schema:
          type: string
          title: Photo Url
        name: photo_url
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /locations/{location_id}/photos/{photo_id}/report:
    put:
      tags:
      - locations
      - photos
      summary: Report Photo
      operationId: report_photo
      parameters:
      - required: true
        schema:
          type: string
          title: Location Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: location_id
        in: path
      - required: true
        schema:
          type: string
          title: Photo Id
        name: photo_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /users/{user_id}/report-avatar:
    put:
      tags:
      - users
      summary: Report Profile Photo
      operationId: report_profile_photo
      parameters:
      - required: true
        schema:
          type: string
          title: User Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: user_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /users/:
    get:
      tags:
      - users
      summary: Find Users By Name
      operationId: find_users_by_name
      parameters:
      - required: true
        schema:
          type: string
          title: Search
        name: search
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserApiOut'
                type: array
                title: Response Find Users By Name Users  Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - users
      summary: Create User
      operationId: create_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserApiIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /users/reset_password:
    put:
      tags:
      - users
      summary: Request Reset Password
      operationId: request_reset_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /users/reset_password/{token}:
    put:
      tags:
      - users
      summary: Reset Password
      operationId: reset_password
      parameters:
      - required: true
        schema:
          type: string
          title: Token
        name: token
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordForm'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /users/reactivate:
    put:
      tags:
      - users
      summary: Unarchive User
      operationId: unarchive_user
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /users/report/{user_id}:
    post:
      tags:
      - users
      summary: Report User
      operationId: report_user
      parameters:
      - required: true
        schema:
          type: integer
          title: User Id
        name: user_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /users/friends/{user_id}:
    post:
      tags:
      - users
      - friends
      summary: Add As Friend
      operationId: add_as_friend
      parameters:
      - required: true
        schema:
          type: string
          title: User Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: user_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /users/friends/accept/{relation_id}:
    post:
      tags:
      - users
      - friends
      summary: Accept Friend Request
      operationId: accept_friend_request
      parameters:
      - required: true
        schema:
          type: string
          title: Relation Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: relation_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /users/friends/decline/{relation_id}:
    post:
      tags:
      - users
      - friends
      summary: Decline Friend Request
      operationId: decline_friend_request
      parameters:
      - required: true
        schema:
          type: string
          title: Relation Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: relation_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /users/friends/:
    get:
      tags:
      - users
      - friends
      summary: Get All Friends
      operationId: get_all_friends
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserApiOut'
                type: array
                title: Response Get All Friends Users Friends  Get
      security:
      - OAuth2PasswordBearer: []
  /users/friends/open:
    get:
      tags:
      - users
      - friends
      summary: Get Received Friend Requests
      operationId: get_received_friend_requests
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserRelation'
                type: array
                title: Response Get Received Friend Requests Users Friends Open Get
      security:
      - OAuth2PasswordBearer: []
  /users/me/:
    get:
      tags:
      - users
      - me
      summary: Get This User
      operationId: get_this_user
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApiOut'
      security:
      - OAuth2PasswordBearer: []
    put:
      tags:
      - users
      - me
      summary: Update User
      operationId: update_user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: Change Set
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
    delete:
      tags:
      - users
      - me
      summary: Delete User
      operationId: delete_user
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /users/me/change_password:
    put:
      tags:
      - users
      - me
      summary: Change User Password
      operationId: change_user_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordForm'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /users/me/photo/:
    get:
      tags:
      - users
      - me
      - profile_photo
      summary: Get Profile Photo
      description: 'This does not have to be implemented, as the user gets the photo
        info with the

        GET /users/me request anyways'
      operationId: get_profile_photo
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
      - OAuth2PasswordBearer: []
    post:
      tags:
      - users
      - me
      - profile_photo
      summary: Create Profile Photo
      operationId: create_profile_photo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhotoUrl'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
    delete:
      tags:
      - users
      - me
      - profile_photo
      summary: Delete Profile Photo
      operationId: delete_profile_photo
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
      - OAuth2PasswordBearer: []
  /offers/:
    get:
      tags:
      - offers
      summary: Get Offers
      operationId: get_offers
      parameters:
      - required: true
        schema:
          items:
            type: string
            examples:
            - 5eb7cf5a86d9755df3a6c593
            - 5eb7cfb05e32e07750a1756a
          type: array
          title: Id
        name: id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
    post:
      tags:
      - offers
      summary: Create Offer
      operationId: create_offer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfferIn'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /offers/location/{location_id}:
    get:
      tags:
      - offers
      summary: Get Offers At Location
      operationId: get_offers_at_location
      parameters:
      - required: true
        schema:
          type: string
          title: Location Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: location_id
        in: path
      - required: false
        schema:
          type: string
          format: date-time
          title: Time From
        name: time_from
        in: query
      - required: false
        schema:
          type: string
          format: date-time
          title: Time Until
        name: time_until
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /offers/around:
    get:
      tags:
      - offers
      summary: Get Offers In Area
      operationId: get_offers_in_area
      parameters:
      - required: true
        schema:
          type: number
          maximum: 180.0
          minimum: -180.0
          title: Long
        name: long
        in: query
      - required: true
        schema:
          type: number
          maximum: 90.0
          minimum: -90.0
          title: Lat
        name: lat
        in: query
      - required: true
        schema:
          type: number
          title: Radius
        name: radius
        in: query
      - required: false
        schema:
          type: string
          format: date-time
          title: Time From
        name: time_from
        in: query
      - required: false
        schema:
          type: string
          format: date-time
          title: Time Until
        name: time_until
        in: query
      - required: false
        schema:
          items:
            type: string
          type: array
          title: Activities
        name: activities
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /offers/me/{offer_id}:
    put:
      tags:
      - offers
      summary: Set Offer Status
      operationId: set_offer_status
      parameters:
      - required: true
        schema:
          type: string
          title: Offer Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: offer_id
        in: path
      - required: true
        schema:
          $ref: '#/components/schemas/OfferStatus'
        name: status
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /offers/{offer_id}:
    put:
      tags:
      - offers
      summary: Contact Offerer
      operationId: contact_offerer
      parameters:
      - required: true
        schema:
          type: string
          title: Offer Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: offer_id
        in: path
      - required: true
        schema:
          type: string
          title: Message
        name: message
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
    delete:
      tags:
      - offers
      summary: Delete Offer
      operationId: delete_offer
      parameters:
      - required: true
        schema:
          type: string
          title: Offer Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: offer_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /chats/:
    get:
      tags:
      - chats
      summary: Poll Users Chats
      operationId: poll_users_chats
      parameters:
      - required: true
        schema:
          type: string
          format: date-time
          title: Last Poll Time
        name: last_poll_time
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
    post:
      tags:
      - chats
      summary: Start Chat
      operationId: start_chat
      parameters:
      - required: true
        schema:
          type: string
          title: Partner Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: partner_id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: string
                title: Response Start Chat Chats  Post
                examples:
                - 5eb7cf5a86d9755df3a6c593
                - 5eb7cfb05e32e07750a1756a
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
  /chats/message:
    post:
      tags:
      - chats
      summary: Send Message
      operationId: send_message
      parameters:
      - required: true
        schema:
          type: string
          title: Chat Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        name: chat_id
        in: query
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
              - $ref: '#/components/schemas/OfferReactionMessage'
              - $ref: '#/components/schemas/PlainMessage'
              title: Message
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - OAuth2PasswordBearer: []
components:
  schemas:
    ChangePasswordForm:
      properties:
        new_password:
          type: string
          title: New Password
        old_password:
          type: string
          title: Old Password
      type: object
      required:
      - new_password
      - old_password
      title: ChangePasswordForm
    GeoJsonFeatureCollection:
      properties:
        type:
          type: string
          title: Type
          default: GeometryCollection
        geometries:
          items:
            type: object
          type: array
          title: Geometries
      type: object
      required:
      - geometries
      title: GeoJsonFeatureCollection
    GeoJsonLine:
      properties:
        type:
          type: string
          title: Type
          default: LineString
        coordinates:
          items:
            items:
              type: number
            type: array
          type: array
          title: Coordinates
      type: object
      required:
      - coordinates
      title: GeoJsonLine
    GeoJsonLocation:
      properties:
        type:
          type: string
          title: Type
          default: Point
        coordinates:
          items:
            type: number
          type: array
          title: Coordinates
      type: object
      required:
      - coordinates
      title: GeoJsonLocation
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    LocationDetailedApi:
      properties:
        activity_type:
          type: string
          title: Activity Type
        location:
          $ref: '#/components/schemas/GeoJsonLocation'
        name:
          type: string
          title: Name
        trust_score:
          type: integer
          title: Trust Score
        tags:
          type: object
          title: Tags
        geometry:
          anyOf:
          - $ref: '#/components/schemas/GeoJsonLocation'
          - $ref: '#/components/schemas/GeoJsonLine'
          - $ref: '#/components/schemas/GeoJsonFeatureCollection'
          title: Geometry
        photos:
          items:
            $ref: '#/components/schemas/PhotoInfo'
          type: array
          title: Photos
        reviews:
          $ref: '#/components/schemas/ReviewsSummary'
        id:
          type: string
          title: Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
      type: object
      required:
      - activity_type
      - location
      - trust_score
      - tags
      - photos
      - reviews
      - id
      title: LocationDetailedApi
    LocationHistoryIn:
      properties:
        location_id:
          type: string
          title: Location Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        before:
          type: object
          title: Before
        after:
          type: object
          title: After
        tags:
          additionalProperties:
            $ref: '#/components/schemas/TagChange'
          type: object
          title: Tags
      type: object
      required:
      - location_id
      title: LocationHistoryIn
    LocationNew:
      properties:
        activity_type:
          type: string
          title: Activity Type
        location:
          $ref: '#/components/schemas/GeoJsonLocation'
        name:
          type: string
          title: Name
        trust_score:
          type: integer
          title: Trust Score
        tags:
          type: object
          title: Tags
          default: {}
        geometry:
          anyOf:
          - $ref: '#/components/schemas/GeoJsonLocation'
          - $ref: '#/components/schemas/GeoJsonLine'
          - $ref: '#/components/schemas/GeoJsonFeatureCollection'
          title: Geometry
      type: object
      required:
      - activity_type
      - location
      - trust_score
      title: LocationNew
    LocationShortApi:
      properties:
        activity_type:
          type: string
          title: Activity Type
        location:
          $ref: '#/components/schemas/GeoJsonLocation'
        name:
          type: string
          title: Name
        trust_score:
          type: integer
          title: Trust Score
        id:
          type: string
          title: Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
      type: object
      required:
      - activity_type
      - location
      - trust_score
      - id
      title: LocationShortApi
    OfferIn:
      properties:
        location:
          anyOf:
          - $ref: '#/components/schemas/OfferLocationConnected'
          - $ref: '#/components/schemas/OfferLocationArea'
          title: Location
        activity:
          items:
            type: string
          type: array
          title: Activity
        time:
          oneOf:
          - $ref: '#/components/schemas/OfferTimeFlexible'
          - $ref: '#/components/schemas/OfferTimeSingle'
          title: Time
          discriminator:
            propertyName: type
            mapping:
              flexible: '#/components/schemas/OfferTimeFlexible'
              single: '#/components/schemas/OfferTimeSingle'
        description:
          type: string
          title: Description
        visibility:
          $ref: '#/components/schemas/OfferVisibility'
      type: object
      required:
      - location
      - activity
      - time
      - description
      - visibility
      title: OfferIn
    OfferLocationArea:
      properties:
        coords:
          $ref: '#/components/schemas/GeoJsonLocation'
        radius:
          type: number
          title: Radius
      type: object
      required:
      - coords
      - radius
      title: OfferLocationArea
    OfferLocationConnected:
      properties:
        coords:
          $ref: '#/components/schemas/GeoJsonLocation'
        id:
          type: string
          title: Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
      type: object
      required:
      - id
      title: OfferLocationConnected
    OfferReactionMessage:
      properties:
        sender:
          type: string
          title: Sender
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        time:
          type: string
          format: date-time
          title: Time
        text:
          type: string
          title: Text
        offer_id:
          type: string
          title: Offer Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
      type: object
      required:
      - sender
      - time
      - text
      - offer_id
      title: OfferReactionMessage
    OfferStatus:
      type: string
      enum:
      - open
      - closed
      - timeout
      title: OfferStatus
      description: An enumeration.
    OfferTimeFlexible:
      properties:
        type:
          type: string
          enum:
          - flexible
          title: Type
          default: flexible
      type: object
      title: OfferTimeFlexible
    OfferTimeSingle:
      properties:
        type:
          type: string
          enum:
          - single
          title: Type
          default: single
        times:
          items:
            type: format
          type: array
          maxItems: 2
          minItems: 2
          title: Times
      type: object
      required:
      - times
      title: OfferTimeSingle
    OfferVisibility:
      type: string
      enum:
      - public
      title: OfferVisibility
      description: An enumeration.
    PhotoInfo:
      properties:
        user_id:
          type: string
          title: User Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        url:
          type: string
          title: Url
        creation_date:
          type: string
          format: date-time
          title: Creation Date
      type: object
      required:
      - user_id
      - url
      - creation_date
      title: PhotoInfo
    PhotoUrl:
      properties:
        url:
          type: string
          title: Url
      type: object
      required:
      - url
      title: PhotoUrl
    PlainMessage:
      properties:
        sender:
          type: string
          title: Sender
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        time:
          type: string
          format: date-time
          title: Time
        text:
          type: string
          title: Text
      type: object
      required:
      - sender
      - time
      - text
      title: PlainMessage
    RelationStatus:
      type: string
      enum:
      - accepted
      - pending
      - declined
      - chatting
      title: RelationStatus
      description: An enumeration.
    ResetPasswordForm:
      properties:
        new_password:
          type: string
          title: New Password
      type: object
      required:
      - new_password
      title: ResetPasswordForm
    ResetPasswordRequest:
      properties:
        email:
          type: string
          title: Email
      type: object
      required:
      - email
      title: ResetPasswordRequest
    ReviewBase:
      properties:
        location_id:
          type: string
          title: Location Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        title:
          type: string
          title: Title
        text:
          type: string
          title: Text
        overall_rating:
          type: number
          title: Overall Rating
        details:
          type: object
          title: Details
      type: object
      required:
      - location_id
      - title
      - text
      - overall_rating
      - details
      title: ReviewBase
    ReviewWithId:
      properties:
        location_id:
          type: string
          title: Location Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        title:
          type: string
          title: Title
        text:
          type: string
          title: Text
        overall_rating:
          type: number
          title: Overall Rating
        details:
          type: object
          title: Details
        creation_date:
          type: string
          format: date-time
          title: Creation Date
        user_id:
          type: string
          title: User Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        id:
          type: string
          title: Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
      type: object
      required:
      - location_id
      - title
      - text
      - overall_rating
      - details
      - creation_date
      - user_id
      - id
      title: ReviewWithId
    ReviewsPage:
      properties:
        next_offset:
          type: integer
          title: Next Offset
        reviews:
          items:
            $ref: '#/components/schemas/ReviewWithId'
          type: array
          title: Reviews
      type: object
      required:
      - reviews
      title: ReviewsPage
    ReviewsSummary:
      properties:
        average_rating:
          type: number
          title: Average Rating
        count:
          type: integer
          title: Count
        recent:
          items:
            $ref: '#/components/schemas/ReviewWithId'
          type: array
          title: Recent
      type: object
      required:
      - average_rating
      - count
      - recent
      title: ReviewsSummary
    TagChange:
      properties:
        mode:
          $ref: '#/components/schemas/TagChangeType'
        content:
          anyOf:
          - type: string
          - items:
              type: string
            type: array
          title: Content
      type: object
      required:
      - mode
      - content
      title: TagChange
    TagChangeType:
      type: string
      enum:
      - add
      - delete
      - change
      title: TagChangeType
      description: An enumeration.
    UserApiIn:
      properties:
        username:
          type: string
          title: Username
        display_name:
          type: string
          title: Display Name
        email:
          type: string
          title: Email
        password:
          type: string
          title: Password
      type: object
      required:
      - username
      - display_name
      - email
      - password
      title: UserApiIn
    UserApiOut:
      properties:
        username:
          type: string
          title: Username
        display_name:
          type: string
          title: Display Name
        id:
          type: string
          title: Id
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        avatar:
          $ref: '#/components/schemas/PhotoInfo'
      type: object
      required:
      - username
      - display_name
      - id
      title: UserApiOut
    UserRelation:
      properties:
        _id:
          type: string
          title: ' Id'
          examples:
          - 5eb7cf5a86d9755df3a6c593
          - 5eb7cfb05e32e07750a1756a
        users:
          items:
            type: string
            examples:
            - 5eb7cf5a86d9755df3a6c593
            - 5eb7cfb05e32e07750a1756a
          type: array
          title: Users
        creation_date:
          type: string
          format: date-time
          title: Creation Date
        status:
          $ref: '#/components/schemas/RelationStatus'
      type: object
      required:
      - users
      - creation_date
      - status
      title: UserRelation
      description: 'Document Mapping class.


        Fields:


        - `id` - MongoDB document ObjectID "_id" field.

        Mapped to the PydanticObjectId class


        Inherited from:


        - Pydantic BaseModel

        - [UpdateMethods](https://roman-right.github.io/beanie/api/interfaces/#aggregatemethods)'
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
    LoginBody:
      properties:
        grant_type:
          type: string
          pattern: password
          title: Grant Type
        username:
          type: string
          title: Username
        password:
          type: string
          title: Password
        scope:
          type: string
          title: Scope
          default: ''
        client_id:
          type: string
          title: Client Id
        client_secret:
          type: string
          title: Client Secret
      type: object
      required:
      - username
      - password
      title: Body_login_auth_token_post
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: auth/token
